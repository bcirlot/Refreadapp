<div class="container">
    <div id="maincontent" class="mt-4">
        <h1 class="mb-4">Record a Chapter Range</h1>
        <form action="/record" method="post" id="chapterForm">
            <div class="form-group">
                <label for="readerId">Select Reader:</label>
                <select id="readerId" name="readerId" class="form-control" required>
                    <% readers.forEach(function(reader) { %>
                        <option value="<%= reader.id %>"><%= reader.reader_name %></option>
                    <% }); %>
                </select>
            </div>

            <input type="hidden" id="startChapterId" name="startChapterId" required>
            <input type="hidden" id="endChapterId" name="endChapterId" required>
            <input type="hidden" id="bookName" name="bookName" required>

            <!-- Flex container for books -->
            <div id="chapterselector" class="d-flex flex-wrap gap-2">
                <% for (let book in chaptersByBook) { %>
                    <div class="bookwrapper mb-2" style="min-width: 200px;">
                        <button type="button" class="collapsible btn btn-secondary w-100 text-left"><%= book %></button>
                        <div class="content mt-2">
                            <div class="row">
                                <% chaptersByBook[book].forEach(function(chapter) { %>
                                    <div class="col-1 mb-1">
                                        <div class="chapter-item btn btn-outline-primary" data-start="<%= chapter.chapter %>" data-end="<%= chapter.chapter %>">
                                            <%= chapter.chapter %>
                                        </div>
                                    </div>
                                <% }); %>
                            </div>
                            <button type="submit" class="btn btn-primary mt-3">Record Chapter Range</button>
                        </div>
                    </div>
                <% } %>
            </div>
        </form>
    </div>
</div>



<script>
    document.addEventListener("DOMContentLoaded", function() {
        var coll = document.getElementsByClassName("collapsible");
        var overlay = document.createElement("div");
        overlay.classList.add("overlay");
        document.body.appendChild(overlay);

        let activeButton = null;
        let bookName = null;

        for (var i = 0; i < coll.length; i++) {
            coll[i].addEventListener("click", function() {
                this.classList.toggle("active");
                var content = this.nextElementSibling;

                activeButton = this;
                bookName = this.textContent.trim();
                document.getElementById('bookName').value = bookName;

                if (content.style.display === "block") {
                    content.style.display = "none";
                    overlay.style.display = "none";
                    activeButton.classList.remove("active");
                } else {
                    content.style.display = "block";
                    content.classList.add("popup");
                    overlay.style.display = "block";
                }
            });
        }

        overlay.addEventListener("click", function(event) {
            if (event.target === overlay) {
                document.querySelectorAll('.content').forEach(function(content) {
                    content.style.display = "none";
                });
                overlay.style.display = "none";
                if (activeButton) {
                    activeButton.classList.remove("active");
                }
            }
        });

        let startChapter = null;

        document.querySelectorAll('.chapter-item').forEach(function(item) {
            item.addEventListener('click', function(e) {
                e.stopPropagation();
                e.preventDefault();

                if (!startChapter) {
                    startChapter = this;
                    startChapter.classList.add('selected-chapter');
                    setChapterRange(this.getAttribute('data-start'), this.getAttribute('data-start'));
                } else {
                    const endChapter = this;
                    endChapter.classList.add('selected-chapter');
                    const startChapterName = startChapter.getAttribute('data-start');
                    const endChapterName = endChapter.getAttribute('data-end');
                    highlightChapterRange(startChapter, endChapter);
                    setChapterRange(startChapterName, endChapterName);
                    startChapter = null;
                }
            });
        });

        function highlightChapterRange(startChapter, endChapter) {
        const chapterItems = document.querySelectorAll('.chapter-item');
        let inRange = false;
        
        chapterItems.forEach(item => {
            // Toggle inRange flag when start or end chapters are encountered
            if (item === startChapter || item === endChapter) {
                inRange = !inRange;
                item.classList.add('range-selected-chapter');
            }

            // If inRange is true, add the class to visually highlight the chapter
            if (inRange || item === startChapter || item === endChapter) {
                item.classList.add('range-selected-chapter');
            } else {
                item.classList.remove('range-selected-chapter');
            }
        });
    }

        document.getElementById('chapterForm').addEventListener('submit', function(e) {
            const startChapterId = document.getElementById('startChapterId').value;
            const endChapterId = document.getElementById('endChapterId').value;
            const selectedBook = document.getElementById('bookName').value;

            if (!selectedBook || !startChapterId || !endChapterId) {
                e.preventDefault();
                alert("Please select a valid book and range of chapters.");
            }
        });
    });

    function setChapterRange(startChapter, endChapter) {
        document.getElementById('startChapterId').value = startChapter;
        document.getElementById('endChapterId').value = endChapter;
    }
</script>

<style>
    /* Ensure the collapsible buttons and content don't force layout changes */
.collapsible {
    background-color: #f1f1f1;
    color: #444;
    cursor: pointer;
    padding: 10px;
    border: none;
    text-align: left;
    outline: none;
    font-size: 16px;
    margin: 0;
    width: 100%;  /* Ensure it takes full width within the flexbox container */
}

/* Each book's wrapper will use the flex-grow property properly */
.bookwrapper {
    flex-grow: 1;
    min-width: 200px;
    max-width: 250px; /* Ensures books sit well side by side */
    margin-bottom: 10px;
}

/* Ensure content does not take up full width and adjusts properly */
.content {
    padding: 0 10px;
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.2s ease-out;
    background-color: white;
    margin-bottom: 10px;
}

/* Compact chapter items */
.chapter-item {
    cursor: pointer;
    padding: 5px;
    text-align: center;
    font-size: 16px;
    min-width: 25px;
    margin: 0;
    display: inline-block;
    border-radius: 4px;
}

/* Highlight classes */
.selected-chapter {
    background-color: #f0f8ff;
    font-weight: bold;
}

.range-selected-chapter {
    background-color: #d1e7ff;
    font-weight: bold;
}

/* Popup styling */
.popup {
    position: fixed;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    background-color: white;
    padding: 20px;
    border-radius: 5px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    z-index: 1000;
    width: 300px;
    max-height: 80%;
    overflow-y: auto;
}

/* Overlay styling */
.overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    z-index: 999;
    display: none;
}

</style>
