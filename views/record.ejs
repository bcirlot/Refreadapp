<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Record Chapter Range</title>
    <link rel="stylesheet" href="style.css">
    <style>
        .collapsible {
            background-color: #f1f1f1;
            color: #444;
            cursor: pointer;
            padding: 10px;
            width: 100%;
            border: none;
            text-align: left;
            outline: none;
            font-size: 18px;
        }

        .active, .collapsible:hover {
            background-color: #ccc;
        }

        .content {
            padding: 0 10px;
            max-height: 0;
            overflow: hidden;
            transition: max-height 0.2s ease-out;
            background-color: white;
            margin-bottom: 10px;
        }

        .chapter-item {
            margin-left: 20px;
            cursor: pointer;
        }

        .selected-chapter {
            background-color: #f0f8ff;
            font-weight: bold;
        }
        /* Style for the popup content */
.popup {
    position: fixed;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    background-color: white;
    padding: 20px;
    border-radius: 5px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    z-index: 1000;
    width: 300px;
    max-height: 80%; /* Ensure it doesn't overflow the screen */
    overflow-y: auto; /* Enable scrolling if content is too long */
}

/* Overlay to dim the background */
.overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5); /* Semi-transparent background */
    z-index: 999; /* Behind the popup but above other content */
    display: none; /* Hidden by default */
}

/* Ensure popup content is hidden by default */
.content {
    display: none;
}
    </style>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            var coll = document.getElementsByClassName("collapsible");
            var overlay = document.createElement("div");
            overlay.classList.add("overlay");
            document.body.appendChild(overlay);
        
            // Track selected book button to deactivate it on overlay close
            let activeButton = null;
            let bookName = null;  // Variable to store the selected book name
        
            for (var i = 0; i < coll.length; i++) {
                coll[i].addEventListener("click", function() {
                    this.classList.toggle("active");
                    var content = this.nextElementSibling;
        
                    // Set activeButton to the currently clicked button
                    activeButton = this;
                    bookName = this.textContent.trim();  // Capture the book name
                    document.getElementById('bookName').value = bookName;  // Set the hidden input with the book name
                    console.log("Selected book:", bookName);  // Log the selected book
        
                    if (content.style.display === "block") {
                        content.style.display = "none";
                        overlay.style.display = "none";
                        activeButton.classList.remove("active");
                        console.log("Closing popup for book:", this.textContent);  // Log when popup is closed
                    } else {
                        content.style.display = "block";
                        content.classList.add("popup");
                        overlay.style.display = "block";
                        console.log("Opening popup for book:", this.textContent);  // Log when popup is opened
                    }
                });
            }
        
            overlay.addEventListener("click", function(event) {
                if (event.target === overlay) {
                    document.querySelectorAll('.content').forEach(function(content) {
                        content.style.display = "none";
                    });
                    overlay.style.display = "none";
        
                    // Deactivate the selected book button
                    if (activeButton) {
                        activeButton.classList.remove("active");
                        console.log("Overlay clicked, closing popup for book:", activeButton.textContent);  // Log overlay click
                    }
                }
            });
        
            let startChapter = null;
        
            document.querySelectorAll('.chapter-item').forEach(function(item) {
                item.addEventListener('click', function(e) {
                    e.stopPropagation();
                    e.preventDefault();
                    console.log("Clicked chapter:", this.textContent);  // Log which chapter was clicked
        
                    if (!startChapter) {
                        startChapter = this;
                        startChapter.classList.add('selected-chapter');
                        setChapterRange(this.getAttribute('data-start'), this.getAttribute('data-start'));
                        console.log("Selected start chapter:", startChapter.getAttribute('data-start'));  // Log selected start chapter
                    } else {
                        const endChapter = this;
                        endChapter.classList.add('selected-chapter');
                        const startChapterName = startChapter.getAttribute('data-start');
                        const endChapterName = endChapter.getAttribute('data-end');
                        setChapterRange(startChapterName, endChapterName);
                        console.log("Selected end chapter:", endChapterName);  // Log selected end chapter
                        startChapter = null;
                    }
                });
            });
        
            document.getElementById('chapterForm').addEventListener('submit', function(e) {
                const startChapterId = document.getElementById('startChapterId').value;
                const endChapterId = document.getElementById('endChapterId').value;
                const selectedBook = document.getElementById('bookName').value;  // Check the book name
        
                console.log("Submitting form with: Book - " + selectedBook + ", Start Chapter - " + startChapterId + ", End Chapter - " + endChapterId);  // Log form submission details
        
                // Check if book name, start, and end chapters are correctly set
                if (!selectedBook || !startChapterId || !endChapterId) {
                    e.preventDefault();  // Stop form submission
                    console.error("Form submission prevented due to missing data (book or chapter range).");
                    alert("Please select a valid book and range of chapters.");
                    return;
                }
            });
        });
        
        function setChapterRange(startChapter, endChapter) {
            document.getElementById('startChapterId').value = startChapter;
            document.getElementById('endChapterId').value = endChapter;
            console.log("Chapter range set: Start - " + startChapter + ", End - " + endChapter);  // Log chapter range being set
        }
        </script>
        
        
</head>
<body>
    <div class="container">
        <div id="maincontent">           
    <h1>Record a Chapter Range</h1>
    <form action="/record" method="post" id="chapterForm">
        <input type="hidden" id="startChapterId" name="startChapterId" required>
        <input type="hidden" id="endChapterId" name="endChapterId" required>
        <input type="hidden" id="bookName" name="bookName" required> <!-- New hidden field for book name -->
        <div id="chapterselector">
            <% for (let book in chaptersByBook) { %>
                <div id="buttonwrapper">
                    <button type="button" class="collapsible"><%= book %></button>
                    <div class="content">
                        <% chaptersByBook[book].forEach(function(chapter, index) { %>
                            <div class="chapter-item"
                            data-start="<%= chapter.name.split(' ')[1] %>"
                            data-end="<%= chapter.name.split(' ')[1] %>">
                            <%= chapter.name.split(' ')[1] %> <!-- Only chapter number -->
                            </div>
                        <% }); %>
                        <button type="submit">Record Chapter Range</button>
                    </div>
                </div>
            <% } %>
        </div>
    </form>
    
    
    <br>
   
</div>
<div id="sidebar">
    <h2>Welcome, <%= userName %>!</h2>
    <a href="/record">Record a Chapter</a></br>
    <a href="/">Go back to the list</a>
</div>
</div>
</body>
</html>
