<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reformation Reading App</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.5.0/font/bootstrap-icons.min.css" rel="stylesheet">

    <style>
    /* Ensure the footer sticks to the bottom of the page */
        .sticky-footer {
            position: fixed;
            bottom: 0;
            width: 100%;
            background-color: #f8f9fa;
            padding: 10px 0 30px;
            box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.1);  /* Optional: Adds a shadow effect */
        }
        body {
            margin-bottom: 100px;  /* Adjust this value based on the height of your footer */
        }
        /* Flash Message Styling */
.flash-message {
    background-color: #f1f1f1;
    border-radius: 20px;
    padding: 10px 20px;
    max-width: 400px;
    margin: 20px auto;
    box-shadow: 0px 3px 10px rgba(0, 0, 0, 0.1);
    position: relative;
    font-family: 'Arial', sans-serif;
}

/* Make it look like a speech bubble */
.noflash-message::after {
    content: '';
    position: absolute;
    top: 100%;
    left: 20px;
    border-width: 10px;
    border-style: solid;
    border-color: #f1f1f1 transparent transparent transparent;
}

/* Flash message close button */
.flash-close-btn {
    position: absolute;
    top: 5px;
    right: 10px;
    background: none;
    border: none;
    font-size: 16px;
    cursor: pointer;
    color: #888;
}

/* Hover effect for close button */
.flash-close-btn:hover {
    color: #333;
}
.spinner {
    width: 40px;
    height: 40px;
    position: relative;
    margin: 20px auto;
}

.double-bounce1, .double-bounce2 {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: #3498db;
    opacity: 0.6;
    
    animation: bounce 2.0s infinite ease-in-out;
}

.double-bounce2 {
    animation-delay: -1.0s;
}

@keyframes bounce {
    0%, 100% {
        transform: scale(0);
    } 
    50% {
        transform: scale(1);
    }
}
/* Full-screen overlay */
.spinner-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent black background */
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000; /* Ensure it's on top of everything */
}

/* Center the spinner content */
.spinner-content {
    width: 100px; /* You can adjust the size of the spinner */
    height: 100px;
}
table .smallerSize {
    padding: 0; 
}
.luther-message {
    background-color: #f8f4e1; /* Parchment-like background */
    border-left: 5px solid #8B0000; /* Dark red border to signify a historic figure */
    font-family: 'IM Fell English SC', serif; /* Example Gothic font */
    padding: 15px;
    border-radius: 10px;
    box-shadow: 0px 3px 10px rgba(0, 0, 0, 0.2);
    max-width: 500px; /* Adjust width as needed */
    margin: 20px;
}

.luther-img {
    float: left;
    margin-right: 10px; /* Space between image and text */
    margin-bottom: 5px;  /* Optional spacing for smaller screens */
}

.luther-message .bi-chat-quote {
    font-size: 24px;
    vertical-align: middle;
    margin-right: 10px;
}

.luther-message small {
    color: #555;
    font-size: 0.85rem;
}

.progress-bar {
        background: linear-gradient(90deg, #f8b400, #ffd700); /* Gold gradient for excitement */
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
        animation: progressPulse 1.5s infinite ease-in-out;
    }

    @keyframes progressPulse {
        0%, 100% {
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
        }
        50% {
            box-shadow: 0px 4px 15px rgba(255, 215, 0, 0.7);
        }
    }

    /* Heading Style */
    h2 {
        color: #2d3436;
        font-weight: bold;
        text-transform: uppercase;
        font-size: 2rem;
        margin-top: 20px;
        margin-bottom: 10px;
    }

    /* Milestone Badge */
    .milestone-badge {
        background-color: #f39c12;
        color: white;
        border-radius: 10px;
        padding: 5px 10px;
        font-size: 1rem;
        margin-left: 10px;
    }

    /* Confetti animation */
    @keyframes confetti {
        0% {
            transform: translateY(0);
        }
        100% {
            transform: translateY(200vh);
        }
    }

    .confetti {
    position: absolute;
    width: 10px;
    height: 10px;
    background-color: rgba(255, 87, 34, 0.7);
    opacity: 0;
    animation: confettiFall 5s linear infinite;
}

@keyframes confettiFall {
    0% {
        transform: translateY(0) rotate(0deg);
        opacity: 1;
    }
    100% {
        transform: translateY(100vh) rotate(360deg);
        opacity: 1;
    }
}

.confetti:nth-child(1) {
    left: 10%;
    animation-delay: 0s;
}

.confetti:nth-child(2) {
    left: 20%;
    animation-delay: 0.5s;
}

.confetti:nth-child(3) {
    left: 30%;
    animation-delay: 1s;
}

.confetti:nth-child(4) {
    left: 40%;
    animation-delay: 1.5s;
}

.confetti:nth-child(5) {
    left: 50%;
    animation-delay: 2s;
}

.confetti:nth-child(6) {
    left: 60%;
    animation-delay: 2.5s;
}

.confetti:nth-child(7) {
    left: 70%;
    animation-delay: 3s;
}

.confetti:nth-child(8) {
    left: 80%;
    animation-delay: 3.5s;
}

.confetti:nth-child(9) {
    left: 90%;
    animation-delay: 4s;
}

.confetti:nth-child(10) {
    left: 100%;
    animation-delay: 4.5s;
}

    </style>
    
</head>
<body>

    <!-- Bootstrap Navbar -->
    <nav class="navbar navbar-expand-lg navbar-light bg-light sticky-top">
        <a class="navbar-brand" href="/">
            <img src="/logo.jpeg" alt="Logo" width="30" height="30" class="d-inline-block align-top">
            Reading Tracker
        </a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
    
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ml-auto">
                <% if (isLoggedIn) { %>
                    <li class="nav-item">
                        <a class="nav-link" href="/about">About</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/reader-profile">Dashboard</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/manage">Manage Family</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/select-reader">Switch Reader</a>
                    </li>
                    <% if (role === 'admin') { %>
                        <li class="nav-item">
                            <a class="nav-link" href="/admin">Admin Page</a>
                        </li>
                    <% } %>
                    <li class="nav-item">
                        <a class="nav-link" href="/logout">Logout</a>
                    </li>
                <% } else { %>
                    <li class="nav-item">
                        <a class="nav-link" href="/login">Login</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/about">About</a>
                    </li>
                <% } %>
            </ul>
        </div>
        <% if (isLoggedIn) { %>
            <% if (typeof activeReaderName !== 'undefined' && activeReaderName) { %>
                <div class="d-flex align-items-center">
                    <!-- Profile Image on the Left -->
                    <span>Active Reader:  </span>  
                    <div class="profile-image">
                        <img src="/ml<%= activeReaderLevelId %>.webp" alt="Level Image" class="img-fluid rounded-circle" style="height: 1.5em;">
                    </div>
                    
                    <span class="navbar-text ml-2">
                        <a href="/reader-profile" class="d-inline"><%= activeReaderName %></a> | Points: <%= activeReaderPoints %>
                    </span>
                </div>
            <% } else { %>
                <span class="navbar-text">
                   <a href="/select-reader" class="d-inline">No active reader selected</a>
                </span>
            <% } %>
        <% } %>
    </nav>
    
   
        <!-- Conditionally display the success message if it exists -->
       <% if (typeof successMessage !== 'undefined' && successMessage.length > 0) { %>
    <div class="luther-message flash-message">
        <img src="/luther.jpeg" alt="Logo" width="85" height="85" class="luther-img"> <!-- Optional Luther Icon -->
        <span><%= successMessage %></span>
        <button class="flash-close-btn">&times;</button>
    </div>
<% } %>

    <div class="container mt-5">
        <!-- Content from specific pages will be injected here -->
        <%- body %>
    </div>
    <footer class="footer bg-dark text-center sticky-footer">
        <div class="container">
            <span class="text-muted">Total Family Points: <% if (typeof totalPoints !== 'undefined') { %><%= totalPoints %><% } else { %>0<% } %></span>
            <a href="/leaderboard" class="text-muted">View Leaderboard</a>
        </div>
    </footer>
    
    <!-- Bootstrap JS and dependencies -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Function to export the user chapters and handle the response
        function exportUserChapters() {
            fetch('/export-chapters-csv')
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(data.message); // Show alert with the message
                        window.location.href = '/manage'; // Redirect back to the manage page
                    } else {
                        alert('Error saving the CSV file.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while exporting the CSV.');
                });
        }
        document.addEventListener('DOMContentLoaded', function() {
    // Flash message close button functionality
    const closeBtn = document.querySelector('.flash-close-btn');
    const flashMessage = document.querySelector('.flash-message');
    
    if (closeBtn && flashMessage) {
        closeBtn.addEventListener('click', function() {
            flashMessage.style.display = 'none'; // Hide the message
        });
    }

    // Book selection and spinner functionality
    const recordBookForm = document.getElementById('recordBookForm');
    const spinner = document.getElementById('loadingSpinner');

    if (recordBookForm) {
        recordBookForm.addEventListener('submit', function(e) {
            const checkedBooks = document.querySelectorAll('input[name="bookName[]"]:checked');
            console.log('Checked Books:', checkedBooks); // Debugging statement
            
            // Check if no books are selected
            if (checkedBooks.length === 0) {
                e.preventDefault();
                alert('Please select at least one book.');
                return; // Prevent spinner from showing if no books are selected
            }
            
            // Show the spinner if form submission is valid
            if (spinner) {
                spinner.style.display = 'block';
            }
        });
    }
    const audio = document.querySelector('audio');
        const currentSpeed = audio ? audio.playbackRate : 1.0;
        const urlParams = new URLSearchParams(window.location.search);
        const autoPlay = urlParams.get('autoplay');
        const speed = parseFloat(urlParams.get('speed')) || 1.0;

        if (audio) {
            audio.playbackRate = speed;  // Set playback speed
            if (autoPlay === 'true') {
                audio.play();  // Play the audio automatically
            }
        }

        const form = document.querySelector('form[action="/mark-chapter-read"]');
        if (audio && form) {
            audio.addEventListener('ended', function() {
                form.insertAdjacentHTML('beforeend', `<input type="hidden" name="speed" value="${audio.playbackRate}">`);
                form.submit();  // Submit the form when the audio ends
            });
        }
});



    </script>
</body>
</html>
